{"version":3,"sources":["Game/Game.js","LogPanel/LogPanel.js","RegistrationPanel/RegistrationPanel.js","Games/warcaby/warcaby.js","Games/szachy/szachy.js","Games/tictactoe/tictactoe.js","App.js","serviceWorker.js","index.js"],"names":["Game","console","log","this","props","name","history","push","gameURL","className","onClick","event","clicked","to","playersNumber","src","img","alt","children","Component","withRouter","LogPanel","loading","submitting","type","onChange","changedUsername","onKeyPress","enterLogin","submit","disabled","style","marginRight","wrongLoginData","color","gotoRegister","RegistrationPanel","_handleKeyDown","e","key","register","enterRegister","unavaliableUsername","gotoLogin","Warcaby","Szachy","Square","value","Board","i","squares","renderSquare","Tictactoe","state","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","App","games","users","usersLoaded","gamesListLoaded","isLogged","isRegistered","wantRegister","username","password","axios","defaults","headers","common","get","then","response","data","charCode","submitRegisterHandler","url","fetch","method","mode","cache","body","JSON","stringify","postData","submitLoginHandler","user","logData","target","game","index","id","imgUrl","path","exact","component","usernameChangeHandler","enterLoginHandler","gotoRegisterHandler","enterRegisterHandler","gotoLoginHandler","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.474f9b6e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Game.css';\r\nimport {\r\n//    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass Game extends Component {\r\n    clicked() {\r\n        //let game_url=\"/\"+game_name\r\n        console.log(this.props.name)\r\n        this.props.history.push(this.props.name)\r\n    }\r\n\r\n    render() {\r\n        const gameURL = \"/\"+ this.props.name\r\n        //console.log(props)\r\n        return (\r\n                <div className=\"Game\">\r\n                    <p onClick={(event) => this.clicked(event)}>I'm\r\n                    <Link to={gameURL}> {this.props.name} </Link>\r\n                    and number of players is: {this.props.playersNumber}</p>\r\n                    <img src={this.props.img} alt=\"\"></img>\r\n                    <p>{this.props.children}</p>\r\n                </div>\r\n        \r\n        )\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default withRouter(Game);","import React, {Component} from 'react';\r\nimport './LogPanel.css'\r\n\r\nclass LogPanel extends Component {\r\n\r\n  render (){\r\n    const loading=this.props.submitting  \r\n    return (\r\n      <div className=\"LogPanel\">\r\n          <p>Username:</p>\r\n          <input type= \"text\" onChange={this.props.changedUsername} onKeyPress={this.props.enterLogin} />\r\n          {/*<p>Password:</p>\r\n          <input type= \"password\" onChange={props.changedPassword} />*/}\r\n          <br></br>\r\n          <br></br>\r\n          \r\n          <button className=\"loginButton\" onClick={this.props.submit} disabled={loading}>\r\n          {loading && (<i\r\n                className=\"fa fa-refresh fa-spin\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n            )}\r\n            {loading && <span>Logging in</span>}\r\n            {!loading && <span>Log in</span>}\r\n          </button>\r\n          {this.props.wrongLoginData===true && <p style={{color:'red'}}>Wrong login data</p>}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"gotoRegisterButton\" onClick={this.props.gotoRegister} >\r\n          Sign in\r\n          </button>\r\n          <p>{this.props.children}</p>\r\n      </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport default LogPanel;","import React, {Component} from 'react';\r\nimport './RegistrationPanel.css'\r\n\r\nclass RegistrationPanel extends Component {\r\n  _handleKeyDown = (e) => {\r\n      if (e.key === 'Enter') {\r\n        return (this.props.register) \r\n      } \r\n  }\r\n  render(){\r\n    const loading=this.props.submitting\r\n\r\n    return (\r\n      <div className=\"RegistrationPanel\">\r\n          <p>Username:</p>\r\n          <input type= \"text\" onChange={this.props.changedUsername} onKeyPress={this.props.enterRegister} />\r\n          {/*<p>Password:</p>\r\n          <input type= \"password\" onChange={this.props.changedPassword} />*/}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"registrationButton\" onClick={this.props.register}  disabled={loading}>\r\n          {loading && (<i\r\n                className=\"fa fa-refresh fa-spin\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n            )}\r\n            {loading && <span>Registering</span>}\r\n            {!loading && <span>Register</span>}\r\n          </button>\r\n          {this.props.unavaliableUsername===true && <p style={{color:'red'}}>That username is unavaliable</p>}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"gotoLoginButton\" onClick={this.props.gotoLogin} >\r\n          Login screen\r\n          </button>\r\n          <p>{this.props.children}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default RegistrationPanel;","import React, {Component} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\n\r\n  class Warcaby extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Warcaby\">\r\n                <p>Warcaby bejbo</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Warcaby);","import React, {Component} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass Szachy extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Szachy\">\r\n                <p>Szachy bejbo</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Szachy);","import React, {Component} from 'react';\r\nimport {\r\n//    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\n  import \"./tictactoe.css\"\r\n\r\nfunction Square(props) {\r\nreturn (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n    {props.value}\r\n    </button>\r\n);\r\n}\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n        return (\r\n          <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n        );\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(0)}\r\n              {this.renderSquare(1)}\r\n              {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(3)}\r\n              {this.renderSquare(4)}\r\n              {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(6)}\r\n              {this.renderSquare(7)}\r\n              {this.renderSquare(8)}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n};\r\n\r\nclass Tictactoe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        history: [\r\n            {\r\n            squares: Array(9).fill(null)\r\n            }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n        history: history.concat([\r\n            {\r\n            squares: squares\r\n            }\r\n        ]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        if (move===0){\r\n            return (\r\n                <div key={move}>\r\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </div>\r\n            );\r\n        }\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n        status = \"Winner: \" + winner;\r\n        } else {\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <br></br>\r\n            <br></br>\r\n            <Board\r\n                squares={current.squares}\r\n                onClick={i => this.handleClick(i)}\r\n            />\r\n            </div>\r\n            <div className=\"game-info\">\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <div>{status}</div>\r\n            <br></br>\r\n            <div>{moves}</div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Tictactoe);\r\n\r\n  \r\nfunction calculateWinner(squares) {\r\nconst lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\nfor (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n    return squares[a];\r\n    }\r\n}\r\nreturn null;\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport Game from './Game/Game';\r\nimport axios from 'axios';\r\nimport LogPanel from './LogPanel/LogPanel';\r\nimport RegistrationPanel from './RegistrationPanel/RegistrationPanel'\r\nimport Warcaby from './Games/warcaby/warcaby'\r\nimport Szachy from './Games/szachy/szachy'\r\nimport Tictactoe from './Games/tictactoe/tictactoe'\r\nimport {\r\n  Switch,\r\n  Route,\r\n//  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      games:[],\r\n      users:[],\r\n      usersLoaded : false,\r\n      gamesListLoaded : false,\r\n      isLogged : false,\r\n      isRegistered: false,\r\n      wantRegister : false,\r\n      username : null,\r\n      password : null,\r\n      loading : false,\r\n      wrongLoginData : false,\r\n      unavaliableUsername : false\r\n\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    //let uTest='https://rickandmortyapi.com/api/character/187'\r\n    let uGamesList='https://cors-anywhere.herokuapp.com/http://boardgames1.herokuapp.com/games/?fbclid=IwAR37IdjpLC4RmLuN1wSehM1DtarmIavEGkcy7SMh-kf_lsIEVp0r3DeyaXY'\r\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n    axios.get(uGamesList)\r\n      .then(response => {\r\n        this.setState({\r\n          games:response.data,\r\n          gamesListLoaded:true\r\n        });\r\n      });\r\n\r\n    let uLog='https://boardgames1.herokuapp.com/register/'\r\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n    axios.get(uLog)\r\n      .then(response => {\r\n        this.setState({\r\n          users:response.data,\r\n          usersLoaded:true\r\n        });\r\n      });\r\n   \r\n\r\n  }\r\n\r\n  enterRegisterHandler(event) {\r\n    if (event.charCode === 13){\r\n      this.submitRegisterHandler();\r\n    }\r\n  }\r\n  \r\n  submitRegisterHandler(event) {\r\n    let uReg='https://boardgames1.herokuapp.com/register/'\r\n    const article = {\"username\": this.state.username};\r\n    \r\n    //console.log(article)\r\n\r\n    async function postData(url = '', data = {}) {\r\n      const response = await fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          },\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n      return response; // parses JSON response into native JavaScript objects\r\n    }\r\n    \r\n    postData(uReg, article).then(\r\n      response => { console.log(response.status);\r\n        if( response.status === 201){\r\n        console.log(\"Zarejestrowany\");\r\n        this.setState({\r\n          usersLoaded:true,\r\n          isLogged: true,\r\n          unavaliableUsername : false,\r\n          isRegistered: true\r\n        });\r\n      }\r\n      else if (response.status === 400){\r\n        this.setState({unavaliableUsername: true});\r\n        console.log(\"Zła nazwa\");\r\n      }\r\n      else{\r\n        console.log(\"Problem z łącznością z serwerem\");\r\n      }\r\n    });\r\n  }\r\n\r\n  enterLoginHandler(event) {\r\n    if (event.charCode === 13){\r\n      this.submitLoginHandler();\r\n    }\r\n  }\r\n\r\n  submitLoginHandler(event) {\r\n    this.setState({ loading: true });\r\n    \r\n    const username = this.state.username;\r\n    //const users = this.state.users\r\n\r\n    this.state.users.map(user => { \r\n      if (username===user.username){\r\n        this.setState({ loading: false });\r\n        this.setState({isLogged: true});\r\n        this.setState({wrongLoginData : false})\r\n      };\r\n    });\r\n    if (this.state.isLogged===false){\r\n      this.setState({ loading: false });\r\n      this.setState({wrongLoginData : true});\r\n    }\r\n  }\r\n\r\n  usernameChangeHandler(event) {\r\n    const logData = {\r\n      ...this.state\r\n    };\r\n    logData.username = event.target.value;\r\n    this.setState({username: logData.username})\r\n  }\r\n\r\n  passwordChangeHandler(event) {\r\n    const logData = {\r\n      ...this.state\r\n    };\r\n    logData.password = event.target.value;\r\n    this.setState({password: logData.password})\r\n  }\r\n\r\n  gotoLoginHandler(event) {\r\n    const logData = {\r\n      ...this.state\r\n    };\r\n    logData.wantRegister = false;\r\n    this.setState({wantRegister: logData.wantRegister})\r\n  }\r\n\r\n  gotoRegisterHandler(event) {\r\n    const logData = {\r\n      ...this.state\r\n    };\r\n    logData.wantRegister = true;\r\n    this.setState({wantRegister: logData.wantRegister})\r\n  }\r\n  \r\n\r\n  render () {\r\n\r\n    const style = {\r\n      color: '#0D0A0B',\r\n    };\r\n\r\n    const games = this.state.games.map((game, index) => { \r\n      //if (game.name !== \"Kółko i krzyżyk\") {\r\n        return <Game \r\n          name={game.name}\r\n          key={game.id}\r\n          playersNumber={game.playersNumber}\r\n          img={game.imgUrl}\r\n          />;\r\n      //}\r\n    });\r\n\r\n    const switchToGames = this.state.games.map((game, index) => { \r\n        return(\r\n          <Switch>\r\n            <Route path={game.name} exact component={game.name}/>\r\n          </Switch>\r\n        )\r\n    });\r\n\r\n    //var {gamesListLoaded, gs} = this.setState;\r\n\r\n    if (this.state.gamesListLoaded===false || this.state.usersLoaded===false ) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    else if(this.state.wantRegister===false && this.state.isRegistered===false && this.state.isLogged===false){\r\n      return(\r\n        <div className=\"App\">\r\n          <h1 style={style} >Hi, welcome to BoardGames!</h1>\r\n          <LogPanel\r\n          changedUsername={(event)=> this.usernameChangeHandler(event)}\r\n          //changedPassword={(event)=> this.passwordChangeHandler(event)}\r\n          submit={(event) =>this.submitLoginHandler(event)}\r\n          enterLogin={(event) => this.enterLoginHandler(event)}\r\n          submitting={this.state.loading}\r\n          gotoRegister={(event) => this.gotoRegisterHandler(event)}\r\n          wrongLoginData={this.state.wrongLoginData}></LogPanel>\r\n        </div>\r\n      );\r\n    }\r\n    else if (this.state.wantRegister===true && this.state.isLogged===false && this.state.isRegistered===false ) {\r\n      return(\r\n        <div className=\"App\">\r\n          <h1 style={style} >Hi, welcome to BoardGames!</h1>\r\n          <RegistrationPanel\r\n          changedUsername={(event)=> this.usernameChangeHandler(event)}\r\n          //changedPassword={(event)=> this.passwordChangeHandler(event)}\r\n          register={(event) =>this.submitRegisterHandler(event)}\r\n          enterRegister={(event) => this.enterRegisterHandler(event)}\r\n          submitting={this.state.loading}\r\n          gotoLogin={(event) => this.gotoLoginHandler(event)}\r\n          unavaliableUsername={this.state.unavaliableUsername}></RegistrationPanel>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n          <div className=\"App\">\r\n            <h1 style={style} >Hi {this.state.username}, welcome to BoardGames!</h1>\r\n            <h1 style={style}> That's your games:</h1>\r\n            {games}\r\n            <Switch>\r\n              <Route path={\"/Warcaby\"} exact component={Warcaby}/>\r\n              <Route path={\"/Szachy\"} exact component={Szachy}/>\r\n              <Route path={\"board-games-frontend/tictactoe\"} exact component={Tictactoe}/>\r\n            </Switch>\r\n          </div>\r\n    );\r\n    }  \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
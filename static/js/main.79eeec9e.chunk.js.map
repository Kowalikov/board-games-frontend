{"version":3,"sources":["app/user/duck/types.js","app/user/duck/actions.js","app/game/duck/types.js","app/game/duck/actions.js","app/game/components/Game/Game.js","app/game/components/GamesMatching/Room/Room.js","app/game/components/Games/szachy/szachy.js","app/game/components/Games/tictactoe/tictactoe.js","app/game/components/GamesMatching/GameMatching.js","app/user/components/LogPanel/LogPanel.js","app/user/components/RegistrationPanel/RegistrationPanel.js","app/user/components/Cockpit/Cockpit.js","App.js","serviceWorker.js","app/user/duck/reducers.js","app/user/duck/index.js","app/game/duck/reducers.js","app/game/duck/index.js","reducers.js","store.js","index.js"],"names":["CHANGE_USERNAME","SET_ID","CHANGE_PASSWORD","GOTO_REGISTER","GOTO_LOGIN","SET_LOGGED_IN","FAILED_LOGIN","SET_REGISTERED","UNAVALIABLE_USERNAME","FAILED_REGISTRATION","LOAD_GAMES","LOAD_USERS","changeUsername","username","type","types","setID","id","userID","changePassword","password","gotoRegister","gotoLogin","setLoggedIn","failedLogin","setRegistered","unavaliableUsername","failedRegistration","loadGames","games","loadUsers","users","matches","roomID","players","maxPlayers","gameName","gameID","Game","console","log","this","props","name","gameURL","history","push","className","onClick","event","clicked","to","playersNumber","src","img","alt","children","Component","withRouter","Room","state","gameId","datakey","playersArray","isMatchJoined","matchesUnloaded","num","gameData","toString","axios","defaults","headers","common","get","then","response","i1","i2","loadMatches","data","length","userId","userSession","userData","joinMatch","article","a","url","fetch","method","mode","cache","body","JSON","stringify","postData","status","loadMatchesFromServer","window","alert","sessionMetadata","roomData","clickedJoin","connect","gameSession","dispatch","actions","matchNotJoined","Szachy","Square","value","Board","i","squares","renderSquare","Tictactoe","Array","fill","stepNumber","xIsNext","slice","calculateWinner","setState","concat","step","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","b","c","GameMatching","initGame","roomURL","matchesList","game","matchesListLoaded","room","index","clickedLeave","joinedRoom","activePlayers","clickedCreateRoom","LogPanel","loading","submitting","onChange","changedUsername","onKeyPress","enterLogin","submit","disabled","style","marginRight","wrongLoginData","color","RegistrationPanel","_handleKeyDown","e","register","enterRegister","Cockpit","sessionData","user","charCode","submitRegisterHandler","submitLoginHandler","gamesParams","imgUrl","loginMetadata","gamesListLoaded","usersLoaded","wantRegister","isRegistered","isLogged","target","enterLoginHandler","enterRegisterHandler","path","GameMatcher","gameActions","App","Boolean","location","hostname","match","INITIAL_STATE","userReducer","action","gameReducer","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","actionCreators","trace","traceLimit","store","createStore","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79eeec9e.chunk.js","sourcesContent":["const CHANGE_USERNAME = 'CHANGE_USERNAME'\r\nconst SET_ID = 'SET_ID'\r\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD'\r\nconst GOTO_REGISTER = 'GOTO_REGISTER'\r\nconst GOTO_LOGIN = 'GOTO_LOGIN'\r\nconst SET_LOGGED_IN = 'SET_LOGGED_IN'\r\nconst FAILED_LOGIN = 'FAILED_LOGIN'\r\nconst SET_REGISTERED = 'SET_REGISTERED'\r\nconst UNAVALIABLE_USERNAME = 'UNAVALIABLE_USERNAME'\r\nconst FAILED_REGISTRATION = 'FAILED_REGISTRATION'\r\nconst LOAD_GAMES = 'LOAD_GAMES'\r\nconst LOAD_USERS = 'LOAD_USERS'\r\n\r\nexport default {\r\n    CHANGE_USERNAME,\r\n    SET_ID,\r\n    CHANGE_PASSWORD,\r\n    GOTO_REGISTER,\r\n    GOTO_LOGIN,\r\n    SET_LOGGED_IN,\r\n    FAILED_LOGIN,\r\n    SET_REGISTERED,\r\n    UNAVALIABLE_USERNAME,\r\n    FAILED_REGISTRATION,\r\n    LOAD_GAMES,\r\n    LOAD_USERS\r\n}","import types from './types'\r\n\r\n\r\nconst changeUsername = username => ({type: types.CHANGE_USERNAME, username: username})\r\nconst setID = id => ({type: types.SET_ID, userID: id})\r\nconst changePassword = password => ({type: types.CHANGE_PASSWORD, password: password})\r\nconst gotoRegister = () => ({type: types.GOTO_REGISTER})\r\nconst gotoLogin = () => ({type: types.GOTO_LOGIN})\r\nconst setLoggedIn = () => ({type: types.SET_LOGGED_IN})\r\nconst failedLogin = () => ({type: types.FAILED_LOGIN})\r\nconst setRegistered = () => ({type: types.SET_REGISTERED})\r\nconst unavaliableUsername = () => ({type: types.UNAVALIABLE_USERNAME})\r\nconst failedRegistration = () => ({type: types.FAILED_REGISTRATION})\r\nconst loadGames = games => ({type: types.LOAD_GAMES, games: games})\r\nconst loadUsers = users => ({type: types.LOAD_USERS, users: users})\r\n\r\n\r\n\r\n\r\nexport default {\r\n    changeUsername,\r\n    setID,\r\n    changePassword,\r\n    gotoRegister,\r\n    gotoLogin,\r\n    setLoggedIn,\r\n    failedLogin,\r\n    setRegistered,\r\n    unavaliableUsername,\r\n    failedRegistration,\r\n    loadGames,\r\n    loadUsers\r\n}","const MATCHES_UNLOADED = 'MATCHES_UNLOADED'\r\nconst LOAD_MATCHES = 'LOAD_MATCHES'\r\nconst JOIN_MATCH = 'JOIN_MATCH'\r\nconst MATCH_NOT_JOINED = 'MATCH_NOT_JOINED'\r\nconst INIT_GAME = 'INIT_GAME'\r\n\r\nexport default {\r\n    MATCHES_UNLOADED,\r\n    LOAD_MATCHES,\r\n    JOIN_MATCH,\r\n    MATCH_NOT_JOINED,\r\n    INIT_GAME,\r\n}","import types from './types'\r\n\r\n\r\nconst matchesUnloaded = () => ({type: types.MATCHES_UNLOADED})\r\nconst loadMatches = matches => ({type: types.LOAD_MATCHES, matches: matches})\r\nconst joinMatch = (roomID, players, maxPlayers) => ({type: types.JOIN_MATCH, roomID: roomID, players: players, maxPlayers: maxPlayers})\r\nconst matchNotJoined = () => ({type: types.MATCH_NOT_JOINED})\r\nconst initGame = (gameName, gameID) => ({type: types.INIT_GAME, gameName: gameName, gameID: gameID})\r\n\r\nexport default {\r\n    matchesUnloaded,\r\n    loadMatches,\r\n    joinMatch,\r\n    matchNotJoined,\r\n    initGame,\r\n}","import React, {Component} from 'react';\r\nimport './Game.css';\r\nimport {\r\n//    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass Game extends Component {\r\n    clicked() {\r\n        console.log(this.props.name===\"Kółko i krzyżyk\")\r\n        var gameURL = \"/\"\r\n        if (this.props.name===\"Kółko i krzyżyk\"){\r\n            gameURL = \"/tictactoe\"\r\n        }\r\n        else{\r\n            gameURL = \"/\"+ this.props.name\r\n        }\r\n        this.props.history.push(gameURL)\r\n    }\r\n\r\n    render() {\r\n        var gameURL = \"/\"\r\n        if (this.props.name===\"Kółko i krzyżyk\"){\r\n            gameURL = \"/tictactoe\"\r\n        }\r\n        else{\r\n            gameURL = \"/\"+ this.props.name\r\n\r\n        }\r\n\r\n        return (\r\n                <div className=\"Game\">\r\n                    <p onClick={(event) => this.clicked(event)}>I'm\r\n                    <Link to={gameURL}> {this.props.name} </Link>\r\n                    and number of players is: {this.props.playersNumber}</p>\r\n                    <img src={this.props.img} alt=\"\"></img>\r\n                    <p>{this.props.children}</p>\r\n                </div>\r\n        \r\n        )\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default withRouter(Game);","import React, {Component} from 'react';\r\nimport './Room.css';\r\nimport axios from 'axios';\r\n/*import Warcaby from '../../Games/warcaby/warcaby'\r\nimport Szachy from '../../Games/szachy/szachy'\r\nimport Tictactoe from '../../Games/tictactoe/tictactoe'*/\r\nimport {\r\n//    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../../duck/actions'\r\n\r\nclass Room extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            gameId:this.props.gameId,\r\n            id:this.props.id,\r\n            datakey:this.props.datakey,\r\n            playersArray:this.props.players,\r\n            maxPlayers:this.props.maxPlayers,\r\n            isMatchJoined: false\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    loadMatchesFromServer() {\r\n      this.props.matchesUnloaded()\r\n      var num = this.props.gameData.gameID\r\n      console.log(num)\r\n      //let gameURL = \"/\"+ this.props.name='https://cors-anywhere.herokuapp.com/http://boardgames1.herokuapp.com/games/?fbclid=IwAR37IdjpLC4RmLuN1wSehM1DtarmIavEGkcy7SMh-kf_lsIEVp0r3DeyaXY'\r\n      let gameURL = \"https://boardgames1.herokuapp.com/matches/\"+ num.toString()\r\n      axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n      axios.get(gameURL)\r\n        .then(response => {\r\n          this.props.loadMatches(response.data.matches);\r\n          var i1;\r\n          var i2;\r\n          console.log(response.data)\r\n          for (i1=0;i1<response.data.matches.length;i1++){\r\n            for (i2=0;i2<response.data.matches[i1].players.length; i2++){  \r\n              if (response.data.matches[i1].players[i2].userId===this.props.userSession.userData.userID) { \r\n                    this.props.joinMatch(\r\n                      response.data.matches[i1].id,\r\n                      response.data.matches[i1].players,\r\n                      response.data.matches[i1].maxPlayers\r\n                    );\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    clickedJoin(event) {\r\n        let roomURL='https://boardgames1.herokuapp.com/join-match/'\r\n        const article = {\r\n            \"match\": this.state.id,\r\n            \"playerName\": this.props.userSession.userData.userID};\r\n        \r\n        console.log('Article')\r\n        console.log(article)\r\n    \r\n        async function postData(url = '', data = {}) {\r\n          const response = await fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n          });\r\n          return response; // parses JSON response into native JavaScript objects\r\n        }\r\n        \r\n        postData(roomURL, article).then(\r\n          response => { console.log(response.status);\r\n            if( response.status === 201){\r\n            console.log(\"Joined\");\r\n            this.loadMatchesFromServer();\r\n          }\r\n          else if (response.status === 500){\r\n            window.alert(\"You are already in room\");\r\n          }\r\n          else{\r\n            console.log(\"Problem z łącznością z serwerem\");\r\n            window.alert(\"Problem z łącznością z serwerem\")\r\n          }\r\n        });\r\n      }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"text-and-button\">\r\n                    { this.props.sessionMetadata.isMatchJoined===false && <div className=\"Room\">\r\n                        <p>\r\n                        Room #{this.state.id} | \r\n                        players: [{this.props.roomData.matches[this.state.datakey].players.length}/{this.props.roomData.matches[this.state.datakey].maxPlayers}]</p>\r\n                        <button onClick={(event) => this.clickedJoin(event)} > join</button>\r\n                        <p>{this.props.children}</p>\r\n                    </div>}\r\n                </div>\r\n        \r\n        )\r\n\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.gameSession, //ew movies: state.movies,\r\n  userSession: {\r\n    ...state.userSession,\r\n  }\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  matchesUnloaded: () => dispatch(actions.matchesUnloaded()),\r\n  loadMatches: matches => dispatch(actions.loadMatches(matches)),\r\n  joinMatch: (roomID, players, maxPlayers) => dispatch(actions.joinMatch(roomID, players, maxPlayers)),\r\n  matchNotJoined: () => dispatch(actions.matchNotJoined()),\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room));","import React, {Component} from 'react';\r\n//import {\r\n//    BrowserRouter as Router,\r\n//    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n//  } from \"react-router-dom\";\r\nimport \"./szachy.css\"\r\n\r\nclass Szachy extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Szachy\">\r\n                <p>Szachy bejbo</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Szachy;","import React, {Component} from 'react';\r\nimport {\r\n//    BrowserRouter as Router,\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\nimport \"./tictactoe.css\"\r\n\r\nfunction Square(props) {\r\nreturn (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n    {props.value}\r\n    </button>\r\n);\r\n}\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n        return (\r\n          <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n        );\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(0)}\r\n              {this.renderSquare(1)}\r\n              {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(3)}\r\n              {this.renderSquare(4)}\r\n              {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(6)}\r\n              {this.renderSquare(7)}\r\n              {this.renderSquare(8)}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n};\r\n\r\nclass Tictactoe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        history: [\r\n            {\r\n            squares: Array(9).fill(null)\r\n            }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n        history: history.concat([\r\n            {\r\n            squares: squares\r\n            }\r\n        ]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        if (move===0){\r\n            return (\r\n                <div key={move}>\r\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </div>\r\n            );\r\n        }\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n        status = \"Winner: \" + winner;\r\n        } else {\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <br></br>\r\n            <br></br>\r\n            <Board\r\n                squares={current.squares}\r\n                onClick={i => this.handleClick(i)}\r\n            />\r\n            </div>\r\n            <div className=\"game-info\">\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <div>{status}</div>\r\n            <br></br>\r\n            <div>{moves}</div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Tictactoe);\r\n\r\n  \r\nfunction calculateWinner(squares) {\r\nconst lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\nfor (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n    return squares[a];\r\n    }\r\n}\r\nreturn null;\r\n}\r\n  ","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Room from './Room/Room';\r\n//import Warcaby from '../Games/warcaby/warcaby'\r\nimport Szachy from '../Games/szachy/szachy'\r\nimport Tictactoe from '../Games/tictactoe/tictactoe'\r\n///import './GameMatching.css';\r\nimport {\r\n//    BrowserRouter as Route\r\n    withRouter,\r\n//    Switch,\r\n//    Route,\r\n//    Link\r\n  } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../duck/actions'\r\n\r\nclass GameMatching extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n      \r\n      this.props.initGame(this.props.games.name, this.props.games.id)\r\n      this.loadMatchesFromServer()\r\n    }\r\n\r\n    loadMatchesFromServer() {\r\n      this.props.matchesUnloaded()\r\n      var num = this.props.games.id\r\n      console.log(num)\r\n      //let gameURL = \"/\"+ this.props.name='https://cors-anywhere.herokuapp.com/http://boardgames1.herokuapp.com/games/?fbclid=IwAR37IdjpLC4RmLuN1wSehM1DtarmIavEGkcy7SMh-kf_lsIEVp0r3DeyaXY'\r\n      let gameURL = \"https://boardgames1.herokuapp.com/matches/\"+ num.toString()\r\n      axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n      axios.get(gameURL)\r\n        .then(response => {\r\n          this.props.loadMatches(response.data.matches);\r\n          var i1;\r\n          var i2;\r\n          console.log(response.data)\r\n          for (i1=0;i1<response.data.matches.length;i1++){\r\n            for (i2=0;i2<response.data.matches[i1].players.length; i2++){  \r\n              if (response.data.matches[i1].players[i2].userId===this.props.userSession.userData.userID) {\r\n                    this.props.joinMatch(\r\n                      response.data.matches[i1].id,\r\n                      response.data.matches[i1].players,\r\n                      response.data.matches[i1].maxPlayers\r\n                    );\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    \r\n    clickedCreateRoom(event){\r\n      let roomURL='https://boardgames1.herokuapp.com/creatematch/'\r\n      const article = {\r\n          \"game\": this.props.gameData.gameID,\r\n          \"maxPlayers\": 2};\r\n  \r\n      async function postData(url = '', data = {}) {\r\n        const response = await fetch(url, {\r\n          method: 'POST', \r\n          mode: 'cors', \r\n          cache: 'no-cache', \r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n          body: JSON.stringify(data) \r\n        });\r\n        return response; \r\n      }\r\n      \r\n      postData(roomURL, article).then(\r\n        response => { console.log(response.status);\r\n          if( response.status === 201){\r\n          console.log(\"Created\");\r\n          this.loadMatchesFromServer()\r\n        }\r\n        else if (response.status === 500){\r\n          window.alert(\"You are already in room\");\r\n        }\r\n        else{\r\n          console.log(\"Problem z łącznością z serwerem\");\r\n          window.alert(\"Problem z łącznością z serwerem\")\r\n        }\r\n      });\r\n    }\r\n\r\n    clickedLeave() {\r\n      let roomURL='https://boardgames1.herokuapp.com/leave-match/'+this.props.userSession.userData.userID.toString()\r\n      const article = {\r\n          \"userId\": this.props.userSession.userData.userID};\r\n      \r\n      console.log('Leave match:')\r\n      console.log(article)\r\n  \r\n      async function postData(url = '', data = {}) {\r\n        const response = await fetch(url, {\r\n          method: 'DELETE',\r\n          mode: 'cors', \r\n          cache: 'no-cache',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n          body: JSON.stringify(data) \r\n        });\r\n        return response; \r\n      }\r\n      \r\n      postData(roomURL, article).then(\r\n        response => { console.log(response.status);\r\n          if( response.status === 204){\r\n          console.log(\"Room left\");\r\n          this.props.matchNotJoined();\r\n          this.loadMatchesFromServer()\r\n        }\r\n        else if (response.status === 500){\r\n          window.alert(\"You are in no room\");\r\n        }\r\n        else{\r\n          console.log(\"Problem z łącznością z serwerem\");\r\n          window.alert(\"Problem z łącznością z serwerem\")\r\n        }\r\n      \r\n      });\r\n    }\r\n\r\n    render() {\r\n\r\n        //gotowy skopiowany kod z App.js do wylistowania matchy i dołączenia do nich\r\n        //dodać zmianę stanu pokoi na kliknięcie\r\n        //dołączenie i dopiero potem renderowanie gry\r\n        //zrobić to zmienną joinedMatch w stanie klasy w tym pliku\r\n        \r\n        \r\n        let matchesList\r\n        if (this.props.sessionMetadata.matchesListLoaded) {\r\n          matchesList = this.props.roomData.matches.map((room, index) => { \r\n              return <Room\r\n                gameId={this.props.gameData.gameID} \r\n                id={room.id}\r\n                key={index}\r\n                datakey={index}\r\n                maxPlayers={room.maxPlayers}\r\n                players={room.players}\r\n                />;\r\n            });\r\n        }\r\n\r\n        let game\r\n        if (this.props.gameData.gameID===1){\r\n            game=<Tictactoe/>\r\n        }\r\n        else{\r\n            game= <Szachy/>   \r\n        }\r\n\r\n\r\n        return(\r\n            <div className=\"GameMatching\">\r\n                { (this.props.sessionMetadata.matchesListLoaded)===false && <h2>Loading room...</h2>\r\n                }\r\n                { this.props.sessionMetadata.matchesListLoaded && this.props.sessionMetadata.isMatchJoined ? \r\n                  <div className=\"Room\">\r\n                    <br></br>\r\n                    <button className=\"button button1\" onClick={(event) => this.clickedLeave(event)} > Leave</button>\r\n                    <p>\r\n                        Room #{this.props.roomData.joinedRoom} | \r\n                        players: [{this.props.roomData.activePlayers.length}/{this.props.roomData.maxPlayers}]</p>\r\n                    {game}\r\n                    <br></br>\r\n                  </div>:\r\n                  <div>\r\n                    <button className=\"button Create-Room\" onClick={(event) => this.clickedCreateRoom(event)} >Create room</button>\r\n                    <br></br>\r\n                    {matchesList}\r\n                  </div>\r\n                }\r\n                {//console.log(this.state.matches)\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.gameSession, //ew movies: state.movies,\r\n  userSession: {\r\n    ...state.userSession,\r\n  }\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  matchesUnloaded: () => dispatch(actions.matchesUnloaded()),\r\n  loadMatches: matches => dispatch(actions.loadMatches(matches)),\r\n  joinMatch: (roomID, players, maxPlayers) => dispatch(actions.joinMatch(roomID, players, maxPlayers)),\r\n  matchNotJoined: () => dispatch(actions.matchNotJoined()),\r\n  initGame: (gameName, gameID) => dispatch(actions.initGame(gameName, gameID)),\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GameMatching));","import React, {Component} from 'react';\r\nimport './LogPanel.css'\r\n\r\nclass LogPanel extends Component {\r\n\r\n  render (){\r\n    const loading=this.props.submitting  \r\n    return (\r\n      <div className=\"LogPanel\">\r\n          <p>Username:</p>\r\n          <input type= \"text\" onChange={this.props.changedUsername} onKeyPress={this.props.enterLogin} />\r\n          {/*<p>Password:</p>\r\n          <input type= \"password\" onChange={props.changedPassword} />*/}\r\n          <br></br>\r\n          <br></br>\r\n          \r\n          <button className=\"loginButton\" onClick={this.props.submit} disabled={loading}>\r\n          {loading && (<i\r\n                className=\"fa fa-refresh fa-spin\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n            )}\r\n            {loading && <span>Logging in</span>}\r\n            {!loading && <span>Log in</span>}\r\n          </button>\r\n          {this.props.wrongLoginData===true && <p style={{color:'red'}}>Wrong login data</p>}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"gotoRegisterButton\" onClick={this.props.gotoRegister} >\r\n          Sign in\r\n          </button>\r\n          <p>{this.props.children}</p>\r\n      </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport default LogPanel;","import React, {Component} from 'react';\r\nimport './RegistrationPanel.css'\r\n\r\nclass RegistrationPanel extends Component {\r\n  _handleKeyDown = (e) => {\r\n      if (e.key === 'Enter') {\r\n        return (this.props.register) \r\n      } \r\n  }\r\n  render(){\r\n    const loading=this.props.submitting\r\n\r\n    return (\r\n      <div className=\"RegistrationPanel\">\r\n          <p>Username:</p>\r\n          <input type= \"text\" onChange={this.props.changedUsername} onKeyPress={this.props.enterRegister} />\r\n          {/*<p>Password:</p>\r\n          <input type= \"password\" onChange={this.props.changedPassword} />*/}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"registrationButton\" onClick={this.props.register}  disabled={loading}>\r\n          {loading && (<i\r\n                className=\"fa fa-refresh fa-spin\"\r\n                style={{ marginRight: \"5px\" }}\r\n              />\r\n            )}\r\n            {loading && <span>Registering</span>}\r\n            {!loading && <span>Register</span>}\r\n          </button>\r\n          {this.props.unavaliableUsername===true && <p style={{color:'red'}}>That username is unavaliable</p>}\r\n          <br></br>\r\n          <br></br>\r\n          <button className=\"gotoLoginButton\" onClick={this.props.gotoLogin} >\r\n          Login screen\r\n          </button>\r\n          <p>{this.props.children}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default RegistrationPanel;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../duck/actions'\r\nimport gameActions from '../../../game/duck/actions'\r\nimport './Cockpit.css'\r\nimport Game from '../../../game/components/Game/Game';\r\nimport GameMatching from '../../../game/components/GamesMatching/GameMatching'\r\nimport LogPanel from '../LogPanel/LogPanel';\r\nimport RegistrationPanel from '../RegistrationPanel/RegistrationPanel'\r\n\r\nclass Cockpit extends Component {\r\n  \r\n  componentDidMount() {\r\n    //console.log(\"props\", this.props)\r\n    let uGamesList='https://boardgames1.herokuapp.com/games/?fbclid=IwAR37IdjpLC4RmLuN1wSehM1DtarmIavEGkcy7SMh-kf_lsIEVp0r3DeyaXY'\r\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n    axios.get(uGamesList)\r\n      .then(response => {\r\n        this.props.loadGames(response.data);\r\n      });\r\n\r\n    let uLog='https://boardgames1.herokuapp.com/register/'\r\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n    axios.get(uLog)\r\n      .then(response => {\r\n        this.props.loadUsers(response.data);\r\n      });\r\n  }\r\n\r\n  submitRegisterHandler() {\r\n    let uReg='https://boardgames1.herokuapp.com/register/'\r\n    const article = {\"username\": this.props.userData.username};\r\n\r\n    async function postData(url = '', data = {}) {\r\n      const response = await fetch(url, {\r\n        method: 'POST', \r\n        mode: 'cors', \r\n        cache: 'no-cache', \r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          },\r\n        body: JSON.stringify(data) \r\n      });\r\n      return response; \r\n    }\r\n    \r\n    postData(uReg, article).then(\r\n      response => { console.log(response.status);\r\n        if( response.status === 201){ \r\n        console.log(\"Zarejestrowany\");\r\n        this.props.setRegistered(response.data);\r\n      }\r\n      else if (response.status === 400){\r\n        console.log(\"Zła nazwa\");\r\n        this.props.unavaliableUsername();\r\n      }\r\n      else{ \r\n        console.log(\"Problem z łącznością z serwerem\");\r\n        this.props.failedRegistration();\r\n      }\r\n    });\r\n  }\r\n  \r\n  submitLoginHandler() {\r\n    const username = this.props.userData.username;    \r\n    this.props.sessionData.users.map(user => { \r\n      if (username===user.username){\r\n        this.props.setLoggedIn()\r\n        this.props.setID(user.id)\r\n      }\r\n      else {\r\n        this.props.failedLogin()\r\n      }\r\n    });\r\n  }\r\n\r\n  enterRegisterHandler(event) {\r\n    if (event.charCode === 13){\r\n      this.submitRegisterHandler();\r\n    }\r\n  }\r\n  \r\n  enterLoginHandler(event) {\r\n    if (event.charCode === 13){\r\n      this.submitLoginHandler();\r\n    }\r\n  }\r\n\r\n  GameMatcher(gamesParams) {\r\n    return <GameMatching games={gamesParams}/>\r\n  }\r\n\r\n  render () {\r\n\r\n    const style = {\r\n      color: '#0D0A0B',\r\n    };\r\n\r\n    const games = this.props.sessionData.games.map((game, index) => { \r\n        return <Game \r\n          name={game.name}\r\n          key={game.id}\r\n          playersNumber={game.playersNumber}\r\n          img={game.imgUrl}\r\n          />;\r\n    });\r\n\r\n    \r\n\r\n    /*const switchToGames = this.props.sessionData.games.map((game, index) => { \r\n        return(\r\n          <Switch>\r\n            <Route path={game.name} exact component={game.name}/>\r\n          </Switch>\r\n        )\r\n    });*/\r\n\r\n    if (this.props.loginMetadata.gamesListLoaded===false || this.props.loginMetadata.usersLoaded===false ) { \r\n      return <div>Loading...</div>;\r\n    }\r\n    else if(this.props.loginMetadata.wantRegister===false && this.props.loginMetadata.isRegistered===false && this.props.loginMetadata.isLogged===false){ \r\n      return(\r\n        <div className=\"App\">\r\n          <h1 style={style} >Hi, welcome to BoardGames!</h1>\r\n          <LogPanel\r\n          changedUsername={(event)=> this.props.changeUsername(event.target.value)}\r\n          //changedPassword={(event)=> this.props.changePassword(event.target.value)} \r\n          submit={() =>this.submitLoginHandler()} \r\n          enterLogin={(event) => this.enterLoginHandler(event)}\r\n          submitting={this.props.loginMetadata.loading}\r\n          gotoRegister={() => this.props.gotoRegister()} \r\n          wrongLoginData={this.props.loginMetadata.wrongLoginData} \r\n          ></LogPanel> \r\n        </div>\r\n      );\r\n    }\r\n    else if (this.props.loginMetadata.wantRegister===true && this.props.loginMetadata.isLogged===false && this.props.loginMetadata.isRegistered===false ) { \r\n      return(\r\n        <div className=\"App\">\r\n          <h1 style={style} >Hi, welcome to BoardGames!</h1>\r\n          <RegistrationPanel\r\n          changedUsername={(event)=> this.props.changeUsername(event.target.value)} \r\n          //changedPassword={(event)=> this.props.changePassword(event.target.value)}\r\n          register={(event) =>this.submitRegisterHandler()} \r\n          enterRegister={(event) => this.enterRegisterHandler(event)}\r\n          submitting={this.props.loginMetadata.loading}\r\n          gotoLogin={() => this.props.gotoLogin()} \r\n          unavaliableUsername={this.props.loginMetadata.unavaliableUsername} \r\n          ></RegistrationPanel>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      ///const isMatched = \r\n      return (\r\n          <div className=\"App\">\r\n            <h1 style={style} >Hi {this.props.userData.username}, welcome to BoardGames!</h1>\r\n            <Link to={'/games'}> Go to games </Link>\r\n            <h2> </h2>\r\n            <Switch>\r\n              <Route path={\"/games\"}>{games}</Route>\r\n              <Route path={\"/Warcaby\"}>{this.GameMatcher(this.props.sessionData.games[0])}</Route>\r\n              <Route path={\"/Szachy\"}>{this.GameMatcher(this.props.sessionData.games[1])}</Route>\r\n              <Route path={\"/tictactoe\"}>{this.GameMatcher(this.props.sessionData.games[0])}</Route>\r\n            </Switch>\r\n          </div>\r\n    );\r\n    }  \r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.userSession //ew movies: state.movies,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeUsername: username => dispatch(actions.changeUsername(username)),\r\n  setID: id => dispatch(actions.setID(id)),\r\n  changePassword: password => dispatch(actions.changePassword(password)),\r\n  gotoRegister: () => dispatch(actions.gotoRegister()),\r\n  gotoLogin: () => dispatch(actions.gotoLogin()),\r\n  setLoggedIn: () => dispatch(actions.setLoggedIn()),\r\n  failedLogin: () => dispatch(actions.failedLogin()),\r\n  setRegistered: () => dispatch(actions.setRegistered()),\r\n  unavaliableUsername: () => dispatch(actions.unavaliableUsername()),\r\n  failedRegistration: () => dispatch(actions.failedRegistration()),\r\n  loadGames: games => dispatch(actions.loadGames(games)),\r\n  loadUsers: users => dispatch(actions.loadUsers(users)),\r\n  initGame: (gameName, gameID) => dispatch(gameActions.initGame(gameName, gameID)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cockpit) //nie wiadomo czy zadziała","import React, { Component } from 'react';\r\nimport Cockpit from './app/user/components/Cockpit/Cockpit'\r\n\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return(\r\n      <div className=\"App\">\r\n        <Cockpit/>\r\n      </div>\r\n    )    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import types from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    userData: {\r\n      username : null,\r\n      userID: null,\r\n      password : null,\r\n    },\r\n    loginMetadata: {\r\n      isLogged : false,\r\n      isRegistered: false,\r\n      wantRegister : false,\r\n      loading : false,\r\n      wrongLoginData : false,\r\n      unavaliableUsername : false,\r\n      usersLoaded : false,\r\n      gamesListLoaded : false,\r\n    },\r\n    sessionData: {\r\n      games:[],\r\n      users:[],\r\n    }\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action ) => { \r\n  switch (action.type){\r\n    case types.CHANGE_USERNAME: \r\n      return {\r\n        ...state, \r\n        userData: {\r\n          ...state.userData, \r\n          username: action.username\r\n        }\r\n      }\r\n    case types.SET_ID:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          userID: action.userID\r\n        }\r\n      }\r\n    case types.CHANGE_PASSWORD: \r\n      return {     \r\n        ...state,\r\n        userData: {\r\n          ...state.userData, \r\n          password: action.password\r\n        }\r\n      }\r\n    case types.GOTO_REGISTER:\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          wantRegister: true,\r\n        }\r\n      }\r\n    case types.GOTO_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          wantRegister: false,\r\n        }\r\n      }\r\n    case types.SET_LOGGED_IN: {\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          loading: false, //CO Z TYM?\r\n          isLogged: true,\r\n          wrongLoginData: false,\r\n        }\r\n      }\r\n    }\r\n    case types.FAILED_LOGIN: {\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          loading: false, //CO Z TYM?\r\n          wrongLoginData: true,\r\n        }\r\n      }\r\n    }\r\n    case types.SET_REGISTERED:\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          usersLoaded:true,\r\n          isLogged: true,\r\n          unavaliableUsername : false,\r\n          isRegistered: true,\r\n        }\r\n      }\r\n    case types.UNAVALIABLE_USERNAME:\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          isLogged: false,\r\n          unavaliableUsername : true,\r\n          isRegistered: false,\r\n        }\r\n      }\r\n    case types.FAILED_REGISTRATION:\r\n      return {\r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          isLogged: false,\r\n          unavaliableUsername : false,\r\n          isRegistered: false,\r\n        }\r\n      }\r\n    case types.LOAD_GAMES: \r\n      return {     \r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          gamesListLoaded: true,\r\n        },\r\n        sessionData: {\r\n          ...state.sessionData, \r\n          games: action.games,\r\n        }\r\n      }\r\n    case types.LOAD_USERS: \r\n      return {     \r\n        ...state,\r\n        loginMetadata: {\r\n          ...state.loginMetadata,\r\n          usersLoaded: true,\r\n        },\r\n        sessionData: {\r\n          ...state.sessionData, \r\n          users: action.users,\r\n        }\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nexport default userReducer ","import userReducer from './reducers'\r\nexport {default as userTypes} from './types'\r\nexport {default as userActions} from './actions'\r\nexport default userReducer\r\n","import types from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    gameData: {\r\n      gameName:null, \r\n      gameID:null,\r\n    },\r\n    sessionMetadata: {\r\n      isMatchJoined:false,\r\n      matchesListLoaded:false,\r\n    },\r\n    roomData: {\r\n      matches:[],\r\n      joinedRoom: null,\r\n      activePlayers: [],\r\n      maxPlayers:null,\r\n\r\n    }\r\n}\r\n\r\nconst gameReducer = (state = INITIAL_STATE, action ) => { \r\n  switch (action.type){\r\n    case types.MATCHES_UNLOADED:\r\n      return {\r\n        ...state,\r\n        sessionMetadata: {\r\n          ...state.sessionMetadata,\r\n          matchesListLoaded: false,\r\n        }\r\n      }\r\n    case types.LOAD_MATCHES: \r\n      return {\r\n        ...state, \r\n        roomData: {\r\n          ...state.roomData, \r\n          matches: action.matches,\r\n        },\r\n        sessionMetadata: {\r\n          ...state.sessionMetadata,\r\n          matchesListLoaded: true,\r\n        }\r\n      }\r\n    case types.JOIN_MATCH: \r\n      return {     \r\n        ...state,\r\n        roomData: {\r\n          ...state.roomData, \r\n          joinedRoom: action.roomID,//\r\n          activePlayers: action.players,//\r\n          maxPlayers: action.maxPlayers,//\r\n        },\r\n        sessionMetadata: {\r\n          ...state.sessionMetadata,\r\n          isMatchJoined: true,\r\n        }\r\n      }\r\n    case types.MATCH_NOT_JOINED: \r\n      return { \r\n        ...state,\r\n        sessionMetadata: {\r\n          ...state.sessionMetadata,\r\n          isMatchJoined: false,\r\n        },\r\n        roomData: {\r\n          ...state.roomData,\r\n          joinedRoom: null,\r\n          activePlayers: [],\r\n          maxPlayers:null,\r\n    \r\n        }\r\n      }\r\n    case types.INIT_GAME: \r\n      return {\r\n        ...state,\r\n        gameData: {\r\n          gameName: action.gameName,\r\n          gameID: action.gameID,\r\n        }\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nexport default gameReducer ","import gameReducer from './reducers'\r\nexport {default as gameTypes} from './types'\r\nexport {default as gameActions} from './actions'\r\nexport default gameReducer\r\n","import {combineReducers} from 'redux';\r\nimport userReducer from './app/user/duck/index';\r\nimport gameReducer from './app/game/duck/index';\r\n\r\nconst rootReducer = combineReducers ({\r\n    userSession: userReducer,\r\n    gameSession: gameReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import {createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\nimport * as actionCreators from \"./app/user/duck/index\";\r\n\r\n\r\nconst composeEnhancers = composeWithDevTools({ \r\n  actionCreators, \r\n  trace: true, \r\n  traceLimit: 25 \r\n}); \r\n\r\nconst store = createStore(rootReducer, composeEnhancers())\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nconst app = (\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}